
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ATOM COLON COMMA COMMENT DOLLAR ELSE EQ IF LBRACE LBRACKET LPAREN RBRACE RBRACKET RPAREN SCENARIO STRINGscript : if script\n              | ifif : IF assignment block\n          | IF assignment block ELSE block\n          | assignmentassignment : ATOM EQ call\n                  | callcall : ATOM LPAREN call_args RPAREN\n            | ATOM LPAREN RPAREN\n            | listlist : LBRACKET RBRACKET\n            | LBRACKET call_args RBRACKET\n            | scenarioscenario : SCENARIO ATOM block\n                | basic_exprblock : LBRACE script RBRACE\n             | LBRACE RBRACEcall_args : script COMMA call_args \n                 | scriptbasic_expr : STRING\n                  | ATOM\n                  | DOLLAR ATOM'
    
_lr_action_items = {'IF':([0,2,4,5,6,7,8,9,11,12,17,18,22,23,24,25,26,28,29,30,31,34,35,37,38,],[3,3,-5,-21,-7,-10,3,-13,-15,-20,3,-11,-22,-3,3,-21,-6,-9,-12,3,-14,-17,-8,-4,-16,]),'ATOM':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,22,23,24,25,26,28,29,30,31,34,35,37,38,],[5,5,5,-5,-21,-7,-10,5,-13,21,-15,-20,22,25,5,-11,-22,-3,5,-21,-6,-9,-12,5,-14,-17,-8,-4,-16,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,11,12,16,17,18,22,23,24,25,26,28,29,30,31,34,35,37,38,],[8,8,8,-5,-21,-7,-10,8,-13,-15,-20,8,8,-11,-22,-3,8,-21,-6,-9,-12,8,-14,-17,-8,-4,-16,]),'SCENARIO':([0,2,3,4,5,6,7,8,9,11,12,16,17,18,22,23,24,25,26,28,29,30,31,34,35,37,38,],[10,10,10,-5,-21,-7,-10,10,-13,-15,-20,10,10,-11,-22,-3,10,-21,-6,-9,-12,10,-14,-17,-8,-4,-16,]),'STRING':([0,2,3,4,5,6,7,8,9,11,12,16,17,18,22,23,24,25,26,28,29,30,31,34,35,37,38,],[12,12,12,-5,-21,-7,-10,12,-13,-15,-20,12,12,-11,-22,-3,12,-21,-6,-9,-12,12,-14,-17,-8,-4,-16,]),'DOLLAR':([0,2,3,4,5,6,7,8,9,11,12,16,17,18,22,23,24,25,26,28,29,30,31,34,35,37,38,],[13,13,13,-5,-21,-7,-10,13,-13,-15,-20,13,13,-11,-22,-3,13,-21,-6,-9,-12,13,-14,-17,-8,-4,-16,]),'$end':([1,2,4,5,6,7,9,11,12,14,18,22,23,25,26,28,29,31,34,35,37,38,],[0,-2,-5,-21,-7,-10,-13,-15,-20,-1,-11,-22,-3,-21,-6,-9,-12,-14,-17,-8,-4,-16,]),'COMMA':([2,4,5,6,7,9,11,12,14,18,20,22,23,25,26,28,29,31,34,35,37,38,],[-2,-5,-21,-7,-10,-13,-15,-20,-1,-11,30,-22,-3,-21,-6,-9,-12,-14,-17,-8,-4,-16,]),'RBRACKET':([2,4,5,6,7,8,9,11,12,14,18,19,20,22,23,25,26,28,29,31,34,35,36,37,38,],[-2,-5,-21,-7,-10,18,-13,-15,-20,-1,-11,29,-19,-22,-3,-21,-6,-9,-12,-14,-17,-8,-18,-4,-16,]),'RPAREN':([2,4,5,6,7,9,11,12,14,17,18,20,22,23,25,26,27,28,29,31,34,35,36,37,38,],[-2,-5,-21,-7,-10,-13,-15,-20,-1,28,-11,-19,-22,-3,-21,-6,35,-9,-12,-14,-17,-8,-18,-4,-16,]),'RBRACE':([2,4,5,6,7,9,11,12,14,18,22,23,24,25,26,28,29,31,33,34,35,37,38,],[-2,-5,-21,-7,-10,-13,-15,-20,-1,-11,-22,-3,34,-21,-6,-9,-12,-14,38,-17,-8,-4,-16,]),'EQ':([5,],[16,]),'LPAREN':([5,25,],[17,17,]),'LBRACE':([5,6,7,9,11,12,15,18,21,22,25,26,28,29,31,32,34,35,38,],[-21,-7,-10,-13,-15,-20,24,-11,24,-22,-21,-6,-9,-12,-14,24,-17,-8,-16,]),'ELSE':([23,34,38,],[32,-17,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'script':([0,2,8,17,24,30,],[1,14,20,20,33,20,]),'if':([0,2,8,17,24,30,],[2,2,2,2,2,2,]),'assignment':([0,2,3,8,17,24,30,],[4,4,15,4,4,4,4,]),'call':([0,2,3,8,16,17,24,30,],[6,6,6,6,26,6,6,6,]),'list':([0,2,3,8,16,17,24,30,],[7,7,7,7,7,7,7,7,]),'scenario':([0,2,3,8,16,17,24,30,],[9,9,9,9,9,9,9,9,]),'basic_expr':([0,2,3,8,16,17,24,30,],[11,11,11,11,11,11,11,11,]),'call_args':([8,17,30,],[19,27,36,]),'block':([15,21,32,],[23,31,37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> script","S'",1,None,None,None),
  ('script -> if script','script',2,'p_script','hash_build_parser.py',8),
  ('script -> if','script',1,'p_script','hash_build_parser.py',9),
  ('if -> IF assignment block','if',3,'p_if','hash_build_parser.py',16),
  ('if -> IF assignment block ELSE block','if',5,'p_if','hash_build_parser.py',17),
  ('if -> assignment','if',1,'p_if','hash_build_parser.py',18),
  ('assignment -> ATOM EQ call','assignment',3,'p_assignment','hash_build_parser.py',27),
  ('assignment -> call','assignment',1,'p_assignment','hash_build_parser.py',28),
  ('call -> ATOM LPAREN call_args RPAREN','call',4,'p_call','hash_build_parser.py',35),
  ('call -> ATOM LPAREN RPAREN','call',3,'p_call','hash_build_parser.py',36),
  ('call -> list','call',1,'p_call','hash_build_parser.py',37),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','hash_build_parser.py',46),
  ('list -> LBRACKET call_args RBRACKET','list',3,'p_list','hash_build_parser.py',47),
  ('list -> scenario','list',1,'p_list','hash_build_parser.py',48),
  ('scenario -> SCENARIO ATOM block','scenario',3,'p_scenario','hash_build_parser.py',58),
  ('scenario -> basic_expr','scenario',1,'p_scenario','hash_build_parser.py',59),
  ('block -> LBRACE script RBRACE','block',3,'p_block','hash_build_parser.py',67),
  ('block -> LBRACE RBRACE','block',2,'p_block','hash_build_parser.py',68),
  ('call_args -> script COMMA call_args','call_args',3,'p_call_args','hash_build_parser.py',75),
  ('call_args -> script','call_args',1,'p_call_args','hash_build_parser.py',76),
  ('basic_expr -> STRING','basic_expr',1,'p_basic_expr','hash_build_parser.py',84),
  ('basic_expr -> ATOM','basic_expr',1,'p_basic_expr','hash_build_parser.py',85),
  ('basic_expr -> DOLLAR ATOM','basic_expr',2,'p_basic_expr','hash_build_parser.py',86),
]
