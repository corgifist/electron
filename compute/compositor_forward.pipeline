#vertex

layout(location = 0) in vec2 aPos;
layout(location = 1) in vec2 aUV;

out vec2 vUV;

flat out int vInstance;

void main() {
    gl_Position = vec4(aPos, 0.0, 1.0);
    vUV = aUV;
    vInstance = gl_InstanceID;
}

#fragment

#define TEXTURE_POOL_SIZE 2048

layout(location = 0) out vec4 gColor;
layout(location = 1) out vec4 gUV;

in vec2 vUV;

flat in int vInstance;

layout(std140, binding = 0) uniform textures {
    sampler2D handles[TEXTURE_POOL_SIZE];
};

void main() {
    gColor = texture(handles[vInstance * 2 + 0], vUV);
    gUV = texture(handles[vInstance * 2 + 1], vUV);
    if (gColor.a == 0.0) discard;
}